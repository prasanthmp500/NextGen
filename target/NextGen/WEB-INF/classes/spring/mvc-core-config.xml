<?xml version="1.0" encoding="UTF-8"?>
<!--
    - DispatcherServlet application context for NextGen web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="mvc-view-config.xml"/>

    
    
    <!--
        - POJOs labeled with the @Controller and @Service annotations are auto-detected.
    -->
    <context:component-scan base-package="org.springframework.nextgen.web"/>

    <!--  all resources inside folder src/main/webapp/resources are mapped so they can be refered to inside JSP files
        (see header.jsp for more details) 
    <mvc:resources mapping="/resources/**" location="/resources/"/>
    -->
  <mvc:annotation-driven />
  <mvc:default-servlet-handler/>
  <mvc:resources mapping="/resources/**" location="/resources/" /> 
  
  
  
  
<!-- Allows users to sign-in with their provider accounts. 	 -->
	<bean class="org.springframework.social.connect.web.ProviderSignInController">
		<constructor-arg ref="connectionFactoryLocator" />
		<constructor-arg ref="usersConnectionRepository" />		
		<constructor-arg>
			<bean class="org.springframework.nextgen.social.SimpleSignInAdapter" />
		</constructor-arg>
		
		<property name="postSignInUrl" value="/home" />
		
	</bean>

	
	<!-- registering an event publisher and notifier -->
	<bean id="feedBackPublisher" class="org.springframework.nextgen.service.FeedBackPublisher">
	</bean>
	
	<bean id="feedBackEventNotifier" class="org.springframework.nextgen.service.FeedBackEventNotifier">
	    <property name="mailSender" ref="mailSender"></property>
	    <property name="mailMessage" ref="mailMessageTemplate"></property>
	</bean>

	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	   	<property name="host"><value>smtp.gmail.com</value></property>
        <property name="port"><value>587</value></property>
        <property name="protocol"><value>smtp</value></property>
        <property name="username"><value>nextgen.entertainment.007@gmail.com</value></property>
        <property name="password"><value>Magnolia123$</value></property>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.quitwait">false</prop>
            </props>
        </property>
	</bean>

	<!-- this is a template message that we can pre-load with default state -->
	<bean id="mailMessageTemplate" class="org.springframework.mail.SimpleMailMessage">
	  <property name="from" value="nextgen.entertainment.007@gmail.com"/>
	  <property name="to" value="nextgen.entertainment.007@gmail.com"/>
	  <property name="subject" value="User FeedBack"/>
	</bean>
	
	
		
	<mvc:view-controller path="/signin" />
	
	<mvc:view-controller path="/signout" />
  
  
    
    
</beans>
