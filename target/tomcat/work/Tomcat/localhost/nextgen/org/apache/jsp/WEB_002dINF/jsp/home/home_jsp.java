/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.30
 * Generated at: 2014-02-25 11:42:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.home;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head> \r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../fragments/headTag.jsp", out, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar map ;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar markers = [];\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$( document ).tooltip();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$( \"#tabs\" ).tabs();\r\n");
      out.write("\t\t\r\n");
      out.write("        $('.kc-wrap').KillerCarousel({\r\n");
      out.write("            // Default natural width of carousel.\r\n");
      out.write("            width: 800,\r\n");
      out.write("            // Item spacing in 3d (has CSS3 3d) mode.\r\n");
      out.write("            spacing3d: 120,\r\n");
      out.write("            // Item spacing in 2d (no CSS3 3d) mode. \r\n");
      out.write("            spacing2d: 120,\r\n");
      out.write("            showShadow: true,\r\n");
      out.write("            showReflection: true,\r\n");
      out.write("            // Looping mode.\r\n");
      out.write("            infiniteLoop: true,\r\n");
      out.write("            // Scale at 75% of parent element.\r\n");
      out.write("            autoScale: 75\r\n");
      out.write("        });\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t$(\"#artistName\").keyup(function(){\r\n");
      out.write("\t\t\tvar similarArtists = new Array();\r\n");
      out.write("\t\t\tvar artistNameInput = $(this);\r\n");
      out.write("\t\t\tvar input = $(this).val();\r\n");
      out.write("            if(input.length > 3 ){\r\n");
      out.write("\t\t\t\t $.get(\"/NextGen/search/artist/\".concat(input),function(data,status){\r\n");
      out.write("\t\t\t\t\t      if(status==\"success\"){\r\n");
      out.write("\t\t\t\t    \t      var jsonObject = jQuery.parseJSON(data);\t\t\t\t\t\t\t    \t  \r\n");
      out.write("\t\t\t\t    \t      var arrayResultLength = (jsonObject[\"results\"][\"artistmatches\"][\"artist\"]).length; \r\n");
      out.write("\t\t\t\t    \t  \t  for(var i=0;i<arrayResultLength;i++){\r\n");
      out.write("\t\t\t\t    \t    \t  similarArtists[i] = jsonObject[\"results\"][\"artistmatches\"][\"artist\"][i].name;  \r\n");
      out.write("\t\t\t\t    \t      }\r\n");
      out.write("\t\t\t\t    \t  \t  $(artistNameInput).autocomplete({source: similarArtists});\t\t\t\t\t    \t  \t  \r\n");
      out.write("\t\t\t\t\t     \t }\t\t\t\t\t      \r\n");
      out.write("\t\t\t\t   \t\t });\r\n");
      out.write("\t\t\t\t\t}\t\t  \r\n");
      out.write("\t\t\t  \t});\t \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    $(\"#playArtist\").click(function() {\r\n");
      out.write("\t\t    \tvar input = $(\"#artistName\").val();\r\n");
      out.write("\t\t    \tvar youtTubePlaylistId = \"\";\r\n");
      out.write("\t\t    \tif(input.length > 0){\r\n");
      out.write("\t\t    \t\t<!-- -->\r\n");
      out.write("\t\t\t\t\t $.get(\"/NextGen/searchYoutube/playlist/\".concat(input),function(data,status){\r\n");
      out.write("\t\t\t\t\t\t  if(status==\"success\"){\r\n");
      out.write("\t\t\t\t    \t      var jsonObjectPlayList = jQuery.parseJSON(data);\r\n");
      out.write("\t\t\t\t    \t      youtTubePlaylistId = jsonObjectPlayList.items[0].id.playlistId;\r\n");
      out.write("\t\t\t\t    \t      \r\n");
      out.write("\t\t\t\t    \t      // get the video ids in the playlist \r\n");
      out.write("\t\t\t\t    \t   \r\n");
      out.write("\t\t\t\t    \t      $.get(\"/NextGen/searchYoutube/loadPlaylistItem/\".concat(youtTubePlaylistId), function(data,status){ \r\n");
      out.write("\t\t\t\t    \t    \t  if(status==\"success\"){\r\n");
      out.write("\t\t\t\t    \t    \t\t  var jsonObjectPlayListItems = jQuery.parseJSON(data);\t  \r\n");
      out.write("\t\t\t\t    \t    \t\t    var playListItemsArray = jsonObjectPlayListItems[\"items\"];\r\n");
      out.write("\t\t\t\t    \t    \t\t    var videoId = new Array();\r\n");
      out.write("\t\t\t\t    \t    \t\t    for(var i=0;i<playListItemsArray.length;i++){\r\n");
      out.write("\t\t\t\t    \t    \t\t    \tvideoId[i] = playListItemsArray[i].snippet.resourceId.videoId\r\n");
      out.write("\t\t\t\t    \t    \t\t    }\r\n");
      out.write("\t\t\t\t    \t  \r\n");
      out.write("\t\t\t\t    \t    \t\t    player.loadPlaylist(videoId)\r\n");
      out.write("\t\t\t\t    \t    \t\t    player.playVideo();\r\n");
      out.write("\t\t\t\t    \t    \t  }\r\n");
      out.write("\t\t\t\t    \t      });\r\n");
      out.write("\t\t\t\t\t     \t }\t\r\n");
      out.write("\t\t\t\t   \t\t });\r\n");
      out.write("\t\t    \t\t}\r\n");
      out.write("\t\t   \t\t }).click(function(){\r\n");
      out.write("\t\t   \t\t\tvar input = $(\"#artistName\").val();\r\n");
      out.write("\t\t   \t\t\tif(input.length > 3){\r\n");
      out.write("\t\t   \t\t\t\r\n");
      out.write("\t\t   \t\t\t\t$.get(\"/NextGen/search/similarArtist/\".concat(input),function(data,status){\r\n");
      out.write("\t\t   \t\t\t\t\tif(status==\"success\"){\r\n");
      out.write("\t\t   \t\t\t\t\t\tvar jsonObjectSimilarArtists = jQuery.parseJSON(data);\r\n");
      out.write("\t\t   \t\t\t\t\t\tvar showDiv = $('#showSimilarArtists');\r\n");
      out.write("\t\t   \t\t\t\t\t\tfor(var i=0;i<(jsonObjectSimilarArtists.similarartists[\"artist\"]).length;i++){\r\n");
      out.write("\t\t   \t\t\t\t\t\t\tvar $div = $(\"<div>\", {class: \"kc-item\"});\r\n");
      out.write("\t\t   \t\t\t\t\t\t\tvar img  = $('<img>');\r\n");
      out.write("\t\t   \t\t\t\t\t\t\timg.attr('src', jsonObjectSimilarArtists.similarartists[\"artist\"][i].image[\"4\"][\"#text\"]);\r\n");
      out.write("\t\t   \t\t\t\t\t\t\t$div.attr('title',jsonObjectSimilarArtists.similarartists[\"artist\"][i].name);\r\n");
      out.write("\t\t   \t\t\t\t\t\t\t$div.append(img);\r\n");
      out.write("\t\t   \t\t\t\t\t\t\t\r\n");
      out.write("\t\t   \t\t\t\t\t\t\tshowDiv.append($div);\r\n");
      out.write("\t\t   \t\t\t\t\t\t}\r\n");
      out.write("\t\t   \t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t                $('.kc-wrap').KillerCarousel({\r\n");
      out.write("\t\t\t\t                    // Default natural width of carousel.\r\n");
      out.write("\t\t\t\t                    width: 800,\r\n");
      out.write("\t\t\t\t                    // Item spacing in 3d (has CSS3 3d) mode.\r\n");
      out.write("\t\t\t\t                    spacing3d: 120,\r\n");
      out.write("\t\t\t\t                    // Item spacing in 2d (no CSS3 3d) mode. \r\n");
      out.write("\t\t\t\t                    spacing2d: 120,\r\n");
      out.write("\t\t\t\t                    showShadow: true,\r\n");
      out.write("\t\t\t\t                    showReflection: true,\r\n");
      out.write("\t\t\t\t                    // Looping mode.\r\n");
      out.write("\t\t\t\t                    infiniteLoop: true,\r\n");
      out.write("\t\t\t\t                    // Scale at 75% of parent element.\r\n");
      out.write("\t\t\t\t                    autoScale: 75\r\n");
      out.write("\t\t\t\t                });\r\n");
      out.write("\t\t   \t\t\t\t\t\t//\r\n");
      out.write("\t\t   \t\t\t\t\t}\t\t   \t\t\t\t\t\t\r\n");
      out.write("\t\t   \t\t\t\t});//end of get function\r\n");
      out.write("\t\t   \t\t\t\t\r\n");
      out.write("\t\t   \t\t\t\t\r\n");
      out.write("\t\t   \t\t\t}\r\n");
      out.write("\t\t   \t\t\t\r\n");
      out.write("\t\t   \t\t\t \r\n");
      out.write("\t\t   \t\t });\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    $(function(){\t\t    \t\r\n");
      out.write("\t\t    \t  $.get(\"/NextGen/search/allEventLocations\",function(data,status){\r\n");
      out.write("\t\t\t\t\t  if(status==\"success\") { \r\n");
      out.write("\t\t\t\t\t\t  var jsonEventLocations = jQuery.parseJSON(data);\r\n");
      out.write("\t\t\t\t\t\t  var metrosLength =(jsonEventLocations.metros[\"metro\"]).length;\r\n");
      out.write("\t\t\t\t\t\t  var map = new Object();\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t  for(var i=0;i<metrosLength;i++){\r\n");
      out.write("\t\t\t\t\t\t\tvar region = (jsonEventLocations.metros[\"metro\"][i]).name;\r\n");
      out.write("\t\t\t\t\t\t\tvar country = (jsonEventLocations.metros[\"metro\"][i]).country;\r\n");
      out.write("\t\t\t\t\t\t\tif( typeof map[country] == \"undefined\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar regions = new Array();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tregions.push(region);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmap[country] = regions;\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t    \t (map[country]).push(region);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t  }\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t  var keys = Object.keys(map);\r\n");
      out.write("\t\t\t\t\t\t  for(var i=0;i<keys.length;i++){\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t\t $(\"#country\").append('<option value=\"'+keys[i]+'\">'+keys[i]+'</option>');\r\n");
      out.write("\t\t\t\t\t\t\t var regionsArray  = map[keys[i]];\r\n");
      out.write("\t\t\t\t\t\t\t for(var j=0; j< regionsArray.length; j++ ){\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#country\").append('<option value=\"'+regionsArray[j]+'\">&nbsp;&nbsp;&nbsp;'+regionsArray[j]+'</option>');\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t }\r\n");
      out.write("\t\t\t\t\t\t \t }\r\n");
      out.write("\t\t\t\t\t \t }\r\n");
      out.write("\t\t    \t  \t});\t\t\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t \r\n");
      out.write("\t\t    $(\"#country\").change(function(){\r\n");
      out.write("\t\t    \tvar locationSelected = $(this).val();\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    \t$.get(\"/NextGen/search/allEvents/\".concat(locationSelected),function(data,status){\r\n");
      out.write("\t\t    \t\tif(status==\"success\"){\r\n");
      out.write("\t\t    \t\t\t\r\n");
      out.write("\t\t    \t\t\tvar eventDetails = jQuery.parseJSON(data);\t\r\n");
      out.write("\t\t    \t\t\t\r\n");
      out.write("\t\t    \t\t\tdeleteMarkers();\r\n");
      out.write("\t\t    \t\t\t\r\n");
      out.write("\t\t    \t\t\tfor(var i=0; i < (eventDetails.events[\"event\"]).length;i++ ){\r\n");
      out.write("\t\t    \t\t\t\t\r\n");
      out.write("\t\t    \t\t\t\tvar event = (eventDetails.events[\"event\"])[i];\t\t    \t\t\t\t\r\n");
      out.write("\t\t    \t\t\t\tvar geo = eventDetails.events[\"event\"][i].venue.location[\"geo:point\"];\r\n");
      out.write("\t\t    \t\t\t\tvar eventLatLng =  new google.maps.LatLng(geo[\"geo:lat\"] ,geo[\"geo:long\"]);\r\n");
      out.write("\t\t    \t\t\t\tvar marker = new google.maps.Marker({position: eventLatLng,animation: google.maps.Animation.DROP, title: event.title });\r\n");
      out.write("\t\t    \t\t\t\tmarker.setMap(map);\r\n");
      out.write("\t\t    \t\t\t\tgoogle.maps.event.addListener(marker, 'click',setInfoWindowOnMarker(event, map, marker) );\r\n");
      out.write("\t\t    \t\t\t\tmarkers.push(marker);\r\n");
      out.write("\t\t    \t\t\t}\r\n");
      out.write("\t\t    \t\t\t\r\n");
      out.write("\t\t    \t\t\t\r\n");
      out.write("\t\t    \t\t}\r\n");
      out.write("\t\t    \t});\r\n");
      out.write("\t\t    \t\r\n");
      out.write("\t\t    \t\r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t   function setInfoWindowOnMarker(event, map, marker) {\t\t\t   \r\n");
      out.write("\t\t\t   return function() { getInfoWindow(event).open(map, marker); }\r\n");
      out.write("\t\t   }\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    function getInfoWindow(event){\r\n");
      out.write("\t\t    \tvar infowindow =  new google.maps.InfoWindow();\r\n");
      out.write("\t\t    \tinfowindow.setContent(getContentString(event));\r\n");
      out.write("\t\t    \treturn infowindow;\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    function getContentString(event){\r\n");
      out.write("\t\t    \t\r\n");
      out.write("\t\t    \t\r\n");
      out.write("\t\t    \tvar content = '<div id=\"content\">'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<h1 id=\"firstHeading\" class=\"firstHeading\">'+ event.title +'</h1>'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<p> Artists </p>'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<p>'+ event.artists.headliner + '</p>'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<p> Venue Details </p>'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<p> Venue Name '+ event.venue.name +'  </p>'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<p> Venue Name Location  </p>'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<p> City '+ event.venue.location.city +'  </p>'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<p> Country '+ event.venue.location.country +'  </p>'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<p> Street '+ event.venue.location.street +'  </p>'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<p> Postal Code '+ event.venue.location.postalcode +'  </p>'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<p> Phone Number '+ event.venue.phonenumber +'  </p>'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<p> last fm url  '+ event.venue.url +'  </p>'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<p> website url  '+ event.venue.website +'  </p>'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<p> <img src=\"'+event.image[3]['#text']+'\"> </p>'+\r\n");
      out.write("\t\t    \t\t\t\t\t'<p> website url  '+ event.startDate +'  </p>'+\r\n");
      out.write("\t\t    \t\t\t\t    '</div>';\r\n");
      out.write("\t\t    \t\t\t\t\r\n");
      out.write("\t\t    \treturn content;\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t // Deletes all markers in the array by removing references to them.\r\n");
      out.write("\t\t    function deleteMarkers() {\r\n");
      out.write("\t\t    \t  for (var i = 0; i < markers.length; i++) {\r\n");
      out.write("\t\t    \t\t markers[i].setMap(null);\r\n");
      out.write("\t\t    \t  }\r\n");
      out.write("\t\t    \t  markers = [];\r\n");
      out.write("\t\t    \t}\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t \r\n");
      out.write("\t\t \t$(\"#searchEventsLink\").click(function(event){\r\n");
      out.write("\t\t \t\tvar mapOptions;\r\n");
      out.write("\t\t    \tmapOptions = {center: new google.maps.LatLng(51.5072,0.1275), zoom: 4};\r\n");
      out.write("\t\t\t\tmap = new google.maps.Map(document.getElementById(\"map-canvas\"),mapOptions);\r\n");
      out.write("\t\t \t\t$( this ).off(event);\r\n");
      out.write("\t\t \t});\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\t\r\n");
      out.write("\t\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\r\n");
      out.write("\t    <script>\r\n");
      out.write("      // 2. This code loads the IFrame Player API code asynchronously.\r\n");
      out.write("      var tag = document.createElement('script');\r\n");
      out.write("      tag.src = \"https://www.youtube.com/iframe_api\";\r\n");
      out.write("      var firstScriptTag = document.getElementsByTagName('script')[0];\r\n");
      out.write("      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n");
      out.write("\r\n");
      out.write("      // 3. This function creates an <iframe> (and YouTube player)\r\n");
      out.write("      //    after the API code downloads.\r\n");
      out.write("      var player;\r\n");
      out.write("      function onYouTubeIframeAPIReady() {\r\n");
      out.write("        player = new YT.Player('player', {\r\n");
      out.write("          height: '225',\r\n");
      out.write("          width: '350',\r\n");
      out.write("          videoId: 'M7lc1UVf-VE',\r\n");
      out.write("          events: {\r\n");
      out.write("            'onReady': onPlayerReady,\r\n");
      out.write("            'onStateChange': onPlayerStateChange\r\n");
      out.write("          }\r\n");
      out.write("        });\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 4. The API will call this function when the video player is ready.\r\n");
      out.write("      function onPlayerReady(event) {\r\n");
      out.write("        event.target.playVideo();\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 5. The API calls this function when the player's state changes.\r\n");
      out.write("      //    The function indicates that when playing a video (state=1),\r\n");
      out.write("      //    the player should play for six seconds and then stop.\r\n");
      out.write("      var done = false;\r\n");
      out.write("      function onPlayerStateChange(event) {\r\n");
      out.write("        if (event.data == YT.PlayerState.PLAYING && !done) {\r\n");
      out.write("          setTimeout(stopVideo, 1000);\r\n");
      out.write("          done = true;\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      function stopVideo() {\r\n");
      out.write("        player.stopVideo();\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("    </script>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t <div id=\"wrapper\">\r\n");
      out.write("\t \r\n");
      out.write("\t\t<div id=\"header\">\r\n");
      out.write("\t\t\t\t<img src=\"resources/images/banner-graphic.png\" />\r\n");
      out.write("\t\t\t\t<p> NextGeneration Entertainment </p>\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div id=\"leftpanel\">\r\n");
      out.write("\t\t\t<!-- 1. The <iframe> (and video player) will replace this <div> tag. -->\r\n");
      out.write("    \t\t<div id=\"player\"></div>\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div id=\"rightpanel\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!--  -->\r\n");
      out.write("\t\t\t<div id=\"tabs\">\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t\t  <ul>\r\n");
      out.write("\t\t\t    <li><a href=\"#tabs-1\" id=\"searchMusicLink\">Search Music</a></li>\r\n");
      out.write("\t\t\t    <li><a href=\"#tabs-2\" id=\"searchEventsLink\">Search Events</a></li>\r\n");
      out.write("\t\t\t    <li><a href=\"#tabs-3\" id=\"notYet\">Aenean lacinia</a></li>\r\n");
      out.write("\t\t\t  </ul>\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  <div id=\"tabs-1\">\r\n");
      out.write("\t\t\t    <p>\r\n");
      out.write("\t\t\t   \t\t<input type=\"search\" id=\"artistName\"> <button id=\"playArtist\"> Watch  </button>\r\n");
      out.write("\t\t\t    </p>\r\n");
      out.write("\t\t\t    <div id=\"showSimilarArtists\" class=\"kc-wrap\"></div>\r\n");
      out.write("\t\t\t  </div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t  <div id=\"tabs-2\">\r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t    <p>\r\n");
      out.write("\t\t\t    \tCountry : <select id=\"country\"> </select>\r\n");
      out.write("\t\t\t    </p>\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t\t    <div id=\"map-canvas\"></div>\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  </div>\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  <div id=\"tabs-3\">\r\n");
      out.write("\t\t\t    <p></p>\r\n");
      out.write("\t\t\t  </div>\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\t\t\t<!--  -->\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t \r\n");
      out.write("\t \t<div id=\"footer\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t \r\n");
      out.write("\t </div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
